/*
Mouse Parallax
==============
A simple jQuery plugin to allow given elements to be used as backgrounds that respond to mouse movement.  Could easily be further extended or modified.
--------------
Author: "Pip Beard Design," Benjamin Alan Robinson
LICENSE: The MIT License (MIT)
*/

(function (n) { n.fn.extend({ mouseParallax: function (t) { var t = n.extend({ moveFactor: 5, zIndexValue: "-1", targetContainer: "body" }, t); return this.each(function () { var i = t, r = n(this); n(i.targetContainer).on("mousemove", function (t) { mouseX = t.pageX; mouseY = t.pageY; windowWidth = n(window).width(); windowHeight = n(window).height(); percentX = mouseX / windowWidth * i.moveFactor - i.moveFactor / 2; percentY = mouseY / windowHeight * i.moveFactor - i.moveFactor / 2; leftString = 0 - percentX - i.moveFactor + "%"; rightString = 0 - percentX - i.moveFactor + "%"; topString = 0 - percentY - i.moveFactor + "%"; bottomString = 0 - percentY - i.moveFactor + "%"; r[0].style.left = leftString; r[0].style.right = rightString; r[0].style.top = topString; r[0].style.bottom = bottomString; i.zIndexValue && (r[0].style.zIndex = i.zIndexValue) }) }) } }) })(jQuery);

/*
* Pixor - Copyright (c) Federico Schiocchet - Pixor (www.pixor.it) - Framework Y (www.framework-y.com)
*/
$(document).ready(function () {
    $(".parallax-layer").each(function () {
        var z = $(this).attr("data-parallax-zindex");
        var m = $(this).attr("data-parallax-move");
        var c = $(this).closest(".mouse-parallax");
        if (isEmpty(z)) z = 9;
        if (isEmpty(m)) m = 5;
        $(this).mouseParallax({ "zIndexValue": z, "moveFactor": m, "targetContainer": c });
    });

    $(".mouse-parallax .bg").each(function (index) {
        $(this).css("margin-left", "-" + $(this).width() / 2 + "px");
    });
    $(".mouse-parallax .parallax-layer.center").each(function (index) {
        $(this).css("margin-left", ($(this).closest(".mouse-parallax").width() - $(this).width()) / 2 + "px");
    });
});

